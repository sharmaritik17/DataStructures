---------------------------------------------USING RECURSION ONLY-----------------------
#include  <bits/stdc++.h>
#include<vector>
#include<iostream>
using namespace std;
void insert_helper(vector<int> &vec, int data) {
	if (!vec.size() || vec.back() < data) {
		vec.push_back(data);
		return;
	}

	int top_element = vec.back();  //vec[vec.size()-1]
	vec.pop_back();
	insert_helper(vec, data);
	vec.push_back(top_element);
}

void sortArray_recursively(vector<int> &vec) {
	if (!vec.size())
		return;

	int top_element = vec.back();  //vec[vec.size()-1]
	vec.pop_back();

	sortArray_recursively(vec);
	insert_helper(vec, top_element);
}

/*^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
#include <iostream>
#include <stack>
using namespace std;

int main() {
	/*||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||*/
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	/*||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||*/
	int size;
	cin >> size;

	vector<int> vec;
	for (int i = 0, val; i < size; i++) {
		cin >> val;
		vec.push_back(val);
	}

	sortArray_recursively(vec);

	for (int i = 0; i < vec.size(); i++) {
		cout << vec[i] << endl;
	}
	return 0;
}
