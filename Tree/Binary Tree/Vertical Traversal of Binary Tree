https://practice.geeksforgeeks.org/problems/print-a-binary-tree-in-vertical-order/1#
/*^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/



vector<int> verticalOrder(Node *root)
{

	//Your code here

	if (!root)
		return {};

	map<int, vector<int>> mp;
	int hd = 0;
	
	queue<pair<Node*, int>> que;
	que.push(make_pair(root, hd));

	while (!que.empty()) {
		pair<Node*, int> front = que.front();
		que.pop();

		Node *front_node = front.first;
		int front_hd = front.second;

		mp[front_hd].push_back(front_node->data);

		if (front_node->left) {
			que.push(make_pair(front_node->left, front_hd - 1));
		}
		if (front_node->right) {
			que.push(make_pair(front_node->right, front_hd + 1));
		}
	}

	vector<int> result;
	for (auto it : mp) {
		for (int i = 0; i < it.second.size(); i++) {
			result.push_back(it.second[i]);
		}
	}
	return result;
}
